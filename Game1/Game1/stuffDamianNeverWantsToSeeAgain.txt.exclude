tickCounter += gameTime.ElapsedGameTime.TotalSeconds;

            if (tickCounter >= (1 / 144))
            {
                if (currentKeyboardState.IsKeyDown(Keys.A) || currentKeyboardState.IsKeyDown(Keys.Left))
                {
                    //player.Velocity.X -= player.Speed;
                    //if (player.Velocity.X < -4)
                    //    player.Velocity.X = -4;
                    player.Position.X -= player.Speed;
                    player.FacingRight = false;
                }
                if (currentKeyboardState.IsKeyDown(Keys.D) || currentKeyboardState.IsKeyDown(Keys.Right))
                {
                    //player.Velocity.X += player.Speed;
                    //if (player.Velocity.X > 4)
                    //    player.Velocity.X = 4;
                    player.Position.X += player.Speed;
                    player.FacingRight = true;
                }
                if (currentKeyboardState.IsKeyDown(Keys.W) || currentKeyboardState.IsKeyDown(Keys.Up))
                {
                    // NEED TO CHECK IF PLAYER CAN JUMP
                    if (player.State == (int)Player.PlayerState.MOVING)
                    {
                        player.Velocity.Y = 0f;
                        player.Acceleration.Y = -player.Speed;
                    }
                }

                //if (currentKeyboardState.IsKeyDown(Keys.S) || currentKeyboardState.IsKeyDown(Keys.Down))
                //    player.Position.Y += player.Speed;

                
                player.Acceleration.Y += (float)(GRAVITY * tickCounter * tickCounter);

                if (player.Acceleration.Y > 9.8f) player.Acceleration.Y = 9.8f;

                player.Velocity.Y += (float)(player.Acceleration.Y * tickCounter);

                if (player.Velocity.Y > GRAVITY)
                    player.Velocity.Y = (float)GRAVITY;


                player.Position.Y += (float)(player.Velocity.Y * tickCounter);


                tickCounter -= (1 / 144);
            }